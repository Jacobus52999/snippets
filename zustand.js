/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/zustand@4.5.4/esm/index.mjs
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import { createStore as t } from "https://cdn.jsdelivr.net/npm/zustand@4.5.4/vanilla/+esm"; export * from "https://cdn.jsdelivr.net/npm/zustand@4.5.4/vanilla/+esm"; import e from "https://cdn.jsdelivr.net/npm/react@18.3.1/+esm"; import o from "https://cdn.jsdelivr.net/npm/use-sync-external-store@1.2.0/shim/with-selector.js/+esm"; const { useDebugValue: n } = e, { useSyncExternalStoreWithSelector: r } = o; let s = !1; const a = t => t; function i(t, e = a, o) { "production" !== (import.meta.env ? import.meta.env.MODE : void 0) && o && !s && (console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"), s = !0); const i = r(t.subscribe, t.getState, t.getServerState || t.getInitialState, e, o); return n(i), i } const m = e => { "production" !== (import.meta.env ? import.meta.env.MODE : void 0) && "function" != typeof e && console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."); const o = "function" == typeof e ? t(e) : e, n = (t, e) => i(o, t, e); return Object.assign(n, o), n }, u = t => t ? m(t) : m; var p = t => ("production" !== (import.meta.env ? import.meta.env.MODE : void 0) && console.warn("[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`."), u(t)); export { u as create, p as default, i as useStore };
//# sourceMappingURL=/sm/dd9beeb361a37f27fa5a577b500db9f647173b396d9d1e712e1a509871b63a52.map
